Hier die Liste mit allen Services, ihren Ports und ihren Zugriffen aus Sicht vom Frontend

/**---------------------------------------------------------
Catalog-Service (Port:8081) [Fertig]

JSON-Objekt:	{
				Product.id		: int,
				Product.price	: double,
				Product.name	: String,
				Product.image	: String (URL)
				} => JSONArray
				

Zugriffe:
	"/products"				-> Gibt JSON-Array mit dem gesamten Produktkatalog wieder
	"/product/{name}"		-> Gibt ein bestimmtes Product anhand des Namens oder der ID zurück
	"/product/?id={int}"	-> Gibt ein bestimmtes Product anhand der ID zurück
*/---------------------------------------------------------

/**---------------------------------------------------------
Shipping-Service (Port:8082) [Fertig]

JSON-Objekt:	String

Zugriffe:
	"/getShippingCosts/?costs={double}"	-> Gibt die passenden Versandkosten zurück. Eingabe wird nicht im Backend validert (mit DB verglichen)
	"/getTracking"						-> Erstellt einen Hashwert, der der Bestellung zugeordnet werden kann
*/---------------------------------------------------------

/**---------------------------------------------------------
Checkout-Service (Port:8083)

JSON-Objekt:	{
				"cart": [
						{
						"id": 1,
						"price": 149.98,
						"name": "Vintage-Objektiv",
						"image": "assets/images/products/camera-lens.jpg"
						},
						{
						"id": 6,
						"price": 21.98,
						"name": "Plattenspieler",
						"image": "assets/images/products/record-player.jpg"
						},
						{
						"id": 8,
						"price": 21.98,
						"name": "Hollandrad",
						"image": "assets/images/products/city-bike.jpg"
						}
				],
				"sum": 193.94,
				"shipping": 0.0,
				"totalSum": 193.94,
				"tracking": "asdf",
				"ordernummer": 1305602,
				"mail": "sadasdad@example.com",
				"street": "qwertz",
				"city": "Stadt",
				"state": "Land",
				"country": "asdf",
				"month": "Juni",
				"cvv": "asdf",
				"year": 2020,
				"zip": 45698,
				"creditcard": 5484568
				}

Zugriffe:
	"/checkout" ->		(POST)	Rechnet die Bestellung ab und erstellt eine Bestellung (Order), die im Backend in der FakeDB gespeichert wird. Die ID der Bestellung wird zurückgegeben
	"(orders/{id}" ->	(GET)	Gibt das gewünschte Order-JSON-Objektt zurück, wenn man den Teil "{id}" durch die Bestellnummer austauscht
*/---------------------------------------------------------

/**---------------------------------------------------------
Cart-Service (Port:8084) [Fertig]

JSON-Objekt:	{
				Product.id		: int,
				Product.price	: double,
				Product.name	: String,
				Product.image	: String (URL)
				} => JSONArray
				

Zugriffe:
	"/cart" -> (GET)	Gibt den Warenkorb mit Product-Objekten aus
	"/cart" -> (POST)	Fügt ein Proukt in den Warenkorb ein (Header: "Content-Type": "application/json", Body: "Product : JSON")
	"/cart" -> (DELETE)	Löscht ein Proukt aus dem Warenkorb (Header: "Content-Type": "application/json", Body: "Product : JSON")
*/---------------------------------------------------------